/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import EDD.Grafo;
import Funciones.FuncionCargar;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Moises Liota
 */
public class Cargar extends javax.swing.JFrame {

    public static Grafo redApp = new Grafo();
    public static int valorT;
    
    public Cargar() {
        initComponents();
        this.setVisible(true);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ruta = new javax.swing.JTextField();
        buscarArchivo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        archivo = new javax.swing.JTextArea();
        cargarRed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setText("Cargar Red de Transporte");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, -1));
        jPanel1.add(ruta, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 330, -1));

        buscarArchivo.setText("Buscar Archivo");
        buscarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarArchivoActionPerformed(evt);
            }
        });
        jPanel1.add(buscarArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 130, -1));

        archivo.setColumns(20);
        archivo.setRows(5);
        jScrollPane1.setViewportView(archivo);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 330, 260));

        cargarRed.setText("Cargar Red");
        cargarRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarRedActionPerformed(evt);
            }
        });
        jPanel1.add(cargarRed, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 330, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarRedActionPerformed
        if(!archivo.getText().isEmpty()){
            FuncionCargar func = new FuncionCargar();
            func.cargar(ruta.getText());
            
            redApp.setEstaciones(func.getEstaciones());
            
            //System.out.println(redApp.toString());
            
            
            
            InicializarT inicializarT = new InicializarT();
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(null, "No has seleccionado ningun archivo.");
        }
        
    }//GEN-LAST:event_cargarRedActionPerformed

    private void buscarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarArchivoActionPerformed
        JFileChooser fc = new JFileChooser();

        // Creo el filtro para archivos .json
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos JSON (*.json)", "json");

        // Le indico el filtro
        fc.setFileFilter(filtro);

        // Abrimos la ventana, guardamos la opción seleccionada por el usuario
        int seleccion = fc.showOpenDialog(this);

        // Si el usuario presiona aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {

            // Selecciono el fichero
            File fichero = fc.getSelectedFile();

            // Escribo la ruta del fichero en un JTextField 
            ruta.setText(fichero.getAbsolutePath()); // Aquí debes usar el JTextField que tienes en el JFrame para mostrar la ruta del archivo
            try (FileReader fr = new FileReader(fichero)) {
                StringBuilder cadena = new StringBuilder();
                int valor = fr.read();

                // Leo el contenido del archivo JSON
                while (valor != -1) {
                    cadena.append((char) valor);
                    valor = fr.read();
                }

                // Modifico el valor del JTextArea para mostrar el contenido del archivo
                archivo.setText(cadena.toString());

            } catch (IOException e1) {
                e1.printStackTrace();
            }

        } else {
            // Si el usuario no seleccionó ningún archivo, muestra un mensaje
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún archivo.");
        }
    }//GEN-LAST:event_buscarArchivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cargar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea archivo;
    private javax.swing.JButton buscarArchivo;
    private javax.swing.JButton cargarRed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField ruta;
    // End of variables declaration//GEN-END:variables
}
