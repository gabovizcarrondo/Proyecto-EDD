/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import EDD.Lista;
import javax.swing.DefaultComboBoxModel;
import EDD.Estacion;
import Funciones.Funcion;
import static Interfaces.Cargar.redApp;
import javax.swing.JOptionPane;

/**
 *
 * @author Moises Liota
 */
public class AgregarLineas extends javax.swing.JFrame {

    private Lista linea = new Lista();
    private Lista conexion = new Lista();
    private Funcion func = new Funcion();

    DefaultComboBoxModel modeloLineaNueva = new DefaultComboBoxModel();
    DefaultComboBoxModel modeloRed = new DefaultComboBoxModel();

    public AgregarLineas() {
        initComponents();
        this.setVisible(true);
        this.setResizable(false);
        this.setLocationRelativeTo(null);

        estacionesLinea.setText(func.mostrarEstaciones(linea));
       this.llenarComboRed();
    }

    private void llenarComboLinea() {
        modeloLineaNueva.removeAllElements();
        if (!linea.isEmpty()) {
            for (int i = 0; i < linea.getSize(); i++) {
                Estacion estacion = (Estacion) linea.getValor(i);
                modeloLineaNueva.addElement(estacion.getNombre());
            }
        }
    }

    private void llenarComboRed() {
        modeloRed.removeAllElements();
        Lista estacionesRed = func.verEstaciones(redApp);
        if(estacionesRed != null){
            for (int i = 0; i < estacionesRed.getSize(); i++) {
                String nombreEstacion = (String) estacionesRed.getValor(i);
                modeloRed.addElement(nombreEstacion);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputEstacion = new javax.swing.JTextField();
        aggEstacion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        estacionesLinea = new javax.swing.JTextArea();
        volver = new javax.swing.JButton();
        cargarLinea = new javax.swing.JButton();
        estacionLinea = new javax.swing.JComboBox<>();
        estacionRed = new javax.swing.JComboBox<>();
        conexionConRed = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setText("Agregar Linea");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, -1, -1));

        jLabel2.setText("Nombre de la Estacion:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));
        getContentPane().add(inputEstacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 270, -1));

        aggEstacion.setText("agregar estacion");
        aggEstacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggEstacionActionPerformed(evt);
            }
        });
        getContentPane().add(aggEstacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 270, -1));

        estacionesLinea.setColumns(20);
        estacionesLinea.setRows(5);
        jScrollPane1.setViewportView(estacionesLinea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 270, 230));

        volver.setText("volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });
        getContentPane().add(volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 400, 110, -1));

        cargarLinea.setText("cargar linea");
        cargarLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarLineaActionPerformed(evt);
            }
        });
        getContentPane().add(cargarLinea, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 360, 280, -1));

        estacionLinea.setModel(modeloLineaNueva);
        getContentPane().add(estacionLinea, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 210, -1));

        estacionRed.setModel(modeloRed);
        getContentPane().add(estacionRed, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 200, 210, -1));

        conexionConRed.setText("Conexion con la Red");
        conexionConRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conexionConRedActionPerformed(evt);
            }
        });
        getContentPane().add(conexionConRed, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, 210, -1));

        jLabel3.setText("Estaciones de la Red");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, -1, -1));

        jLabel4.setText("Estaciones de la Linea Nueva");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, -1, -1));

        jLabel5.setText("Establecer la Conexion entre la nueva linea");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, -1, -1));

        jLabel6.setText("y la red existente");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 90, 20));

        jLabel7.setText("Primer Paso:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jLabel8.setText("Segundo Paso:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void conexionConRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conexionConRedActionPerformed
        String nombreEstacionLinea = (String) estacionLinea.getSelectedItem();
        String nombreEstacionRed = (String) estacionRed.getSelectedItem();
        
        func.agregarConexion(nombreEstacionLinea, nombreEstacionRed, conexion);
        
        //conexion.print();
    }//GEN-LAST:event_conexionConRedActionPerformed

    private void aggEstacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aggEstacionActionPerformed
        if (!inputEstacion.getText().isEmpty()) {
            String nombre = inputEstacion.getText();
            Estacion estacion = new Estacion(nombre);
            linea.insertFinale(estacion);

            inputEstacion.setText("");
            
            this.llenarComboLinea();
            estacionesLinea.setText(func.mostrarEstaciones(linea));
        }else{
            JOptionPane.showMessageDialog(null, "El input esta vacio");
        }
    }//GEN-LAST:event_aggEstacionActionPerformed

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        Menu menu = new Menu();
        this.dispose();
    }//GEN-LAST:event_volverActionPerformed

    private void cargarLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarLineaActionPerformed
        if(!linea.isEmpty()){
            if(!conexion.isEmpty()){
                func.a√±adirConexionesLinea(linea);
                func.agregarLinea(redApp, linea);
                
                String nombre1 = (String) conexion.getValor(0);
                String nombre2 = (String) conexion.getValor(1);
                
                redApp.addConnection(nombre1, nombre2);
                System.out.println(redApp.toString());
//                for (int i = 0; i < linea.getSize(); i++) {
//                    Estacion estacion = (Estacion) linea.getValor(i);
//                    System.out.println(estacion.toString());
//                    System.out.println("");
//                }
            }else{
                JOptionPane.showMessageDialog(null, "Debes agregar una conexion entre la linea y la red para poder agregar una linea nueva.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Debes agregar estaciones a la Linea para poder agregar una nueva linea.");
        }
    }//GEN-LAST:event_cargarLineaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarLineas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarLineas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarLineas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarLineas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarLineas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aggEstacion;
    private javax.swing.JButton cargarLinea;
    private javax.swing.JButton conexionConRed;
    private javax.swing.JComboBox<String> estacionLinea;
    private javax.swing.JComboBox<String> estacionRed;
    private javax.swing.JTextArea estacionesLinea;
    private javax.swing.JTextField inputEstacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
